---
# Validate configuration before proceeding
- name: Validate Traefik configuration
  ansible.builtin.include_tasks: validate.yml
  tags:
    - traefik
    - validation

- name: Create Traefik base directory structure
  ansible.builtin.file:
    name: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "{{ traefik_file_permissions.directories }}"
    force: false
  loop:
    - "{{ traefik_base_folder }}"
    - "{{ traefik_base_folder }}/data"
    - "{{ traefik_base_folder }}/data/config"
    - "{{ traefik_base_folder }}/data/acme"
    - "{{ traefik_base_folder }}/data/logs"

- name: Secure ACME directory permissions
  ansible.builtin.file:
    name: "{{ traefik_base_folder }}/data/acme"
    state: directory
    owner: root
    group: root
    mode: "0700"
    force: false

- name: Create Traefik configuration files from templates
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default(traefik_file_permissions.configs) }}"
    backup: "{{ traefik_backup_configs }}"
    owner: root
    group: root
  loop:
    - src: "compose.yaml.j2"
      dest: "{{ traefik_base_folder }}/compose.yaml"
    - src: "traefik.env.j2"
      dest: "{{ traefik_base_folder }}/traefik.env"
      mode: "{{ traefik_file_permissions.secrets }}"
  notify: restart_traefik
  tags:
    - traefik
    - config

- name: Create Traefik static configuration
  ansible.builtin.template:
    src: "traefik.yaml.j2"
    dest: "{{ traefik_base_folder }}/data/config/traefik.yaml"
    mode: "{{ traefik_file_permissions.configs }}"
    backup: "{{ traefik_backup_configs }}"
    owner: root
    group: root
  notify: restart_traefik
  tags:
    - traefik
    - config

- name: Create Traefik dynamic configuration
  ansible.builtin.template:
    src: "dynamic.yaml.j2"
    dest: "{{ traefik_base_folder }}/data/config/dynamic.yaml"
    mode: "{{ traefik_file_permissions.configs }}"
    backup: "{{ traefik_backup_configs }}"
    owner: root
    group: root
  tags:
    - traefik
    - config

- name: Ensure required Docker networks exist
  community.docker.docker_network:
    name: "{{ item }}"
    state: present
    enable_ipv6: true
    driver: bridge
  loop: "{{ traefik_networks }}"
  when: traefik_create_networks
  tags:
    - traefik
    - networks
