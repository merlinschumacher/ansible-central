---
services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    env_file: "{{ authentik_base_folder }}/postgres.env"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - {{ authentik_base_folder }}/data/postgresql:/var/lib/postgresql/data
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - {{ authentik_base_folder }}/data/redis:/data
  server:
    image: {{ authentik_docker_image }}:{{ authentik_docker_tag }}
    restart: unless-stopped
    container_name: authentik-server
    command: server
    volumes:
      - {{ authentik_base_folder }}/data/authentik/media:/media
      - {{ authentik_base_folder }}/data/authentik/templates:/templates
      - certs:/certs:ro
    networks:
      default:
      {{ docker_proxy_network }}:
        ipv4_address: "172.18.0.4"
        ipv6_address: "fd3c:3065:744::4"
    env_file: "{{ authentik_base_folder }}/authentik.env"
    labels:
      - traefik.enable=true
      - traefik.http.routers.authentik.rule=(HostRegexp(`^.+\.{{ ansible_domain | replace('.', '\.') }}$`) && PathPrefix(`/outpost.goauthentik.io/`)) || Host(`auth.{{ ansible_domain }}`)
      - traefik.http.services.authentik.loadbalancer.server.port=9000
      - traefik.http.routers.authentik.entrypoints={{ docker_traefik_https_endpoint }}
      - traefik.http.routers.authentik.service=authentik
      - traefik.http.routers.authentik.tls=true
      - traefik.http.routers.authentik.tls.certresolver=default
      - traefik.http.middlewares.{{ docker_traefik_auth_middleware }}.forwardauth.address=http://authentik-server:9000/outpost.goauthentik.io/auth/traefik
      - traefik.http.middlewares.{{ docker_traefik_auth_middleware }}.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.{{ docker_traefik_auth_middleware }}.forwardauth.authResponseHeaders=X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    image: {{ authentik_docker_image }}:{{ authentik_docker_tag }}
    restart: unless-stopped
    command: worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - {{ authentik_base_folder }}/data/authentik/media:/media
      - {{ authentik_base_folder }}/data/authentik/custom-templates:/templates
      - certs:/certs
    networks:
      - default
    env_file: "{{ authentik_base_folder }}/authentik.env"
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  certs:
    external: true

networks:
  {{ docker_proxy_network }}:
    external: true