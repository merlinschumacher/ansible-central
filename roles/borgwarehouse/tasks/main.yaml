- name: Create borgwarehouse user
  ansible.builtin.include_role:
    name: singleplatform-eng.users
  vars:
    users:
      - username: "{{ borgwarehouse_user }}"
        users_create_per_user_group: true
        shell: /bin/false
        create_home: false
        system: true

- name: Create borgwarehouse folders
  ansible.builtin.file:
    name: "{{ borgwarehouse_base_folder }}/{{ item }}"
    state: directory
    owner: "{{ borgwarehouse_user }}"
    group: "{{ borgwarehouse_group }}"
    mode: "0750"
    force: false
  with_items:
    - "data"
    - "data/config"
    - "data/ssh"
    - "data/tmp"
    - "data/logs"
  notify:
    - borgwarehouse-recreate

- name: Create borgwarehouse folders
  ansible.builtin.file:
    name: "{{ borgwarehouse_base_folder }}/{{ item }}"
    state: directory
    owner: "{{ borgwarehouse_user }}"
    group: "{{ borgwarehouse_group }}"
    mode: "0700"
    force: false
  with_items:
    - "data/dot-ssh"
  notify:
    - borgwarehouse-recreate

- name: Create borgwarehouse compose file from template
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ borgwarehouse_base_folder }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
    mode: "0640"
  with_items:
    - "compose.yaml.j2"
    - "borgwarehouse.env.j2"
  notify:
    - borgwarehouse-recreate

- name: Creates a cron job for borgwarehouse
  ansible.builtin.cron:
    name: "borgwarehouse"
    minute: "*/30"
    user: "nobody"
    job: "curl --request POST --url 'https://backup.{{ ansible_domain }}/api/cronjob/checkStatus' \
      --header 'Authorization: Bearer {{ borgwarehouse_cronjob_key }}'; \
      curl --request POST --url 'https://backup.{{ ansible_domain }}/api/cronjob/getStorageUsed' \
      --header 'Authorization: Bearer {{ borgwarehouse_cronjob_key }}'"
    cron_file: borgwarehouse
