---
- name: Create Jellyfin base directory
  ansible.builtin.file:
    name: "{{ media_jellyfin_base_folder }}"
    state: directory
    owner: "{{ media_uid }}"
    group: "{{ media_gid }}"
    mode: "{{ media_file_permissions.directories }}"

- name: Create Jellyfin subdirectories
  ansible.builtin.file:
    name: "{{ item }}"
    state: directory
    owner: "{{ media_uid }}"
    group: "{{ media_gid }}"
    mode: "{{ media_file_permissions.data }}"
  loop:
    - "{{ media_jellyfin_base_folder }}/config"
    - "{{ media_jellyfin_base_folder }}/cache"

- name: Get user id for video group
  ansible.builtin.getent:
    database: group

- name: Get id for video group
  ansible.builtin.set_fact:
    video_group: "{{ ansible_facts.getent_group['video'][1] }}"

- name: Get id for render group
  ansible.builtin.set_fact:
    render_group: "{{ ansible_facts.getent_group['render'][1] }}"

- name: Create Jellyfin configuration from template
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default(media_file_permissions.configs) }}"
    owner: "{{ media_uid }}"
    group: "{{ media_gid }}"
    backup: "{{ media_backup_configs }}"
  loop:
    - src: "jellyfin-config.json.j2"
      dest: "{{ media_jellyfin_base_folder }}/config.json"
    - src: "jellyfin.env.j2"
      dest: "{{ media_base_folder }}/jellyfin.env"
    - src: "jellyfin.yaml.j2"
      dest: "{{ media_base_folder }}/jellyfin.yaml"
  notify: restart_media
