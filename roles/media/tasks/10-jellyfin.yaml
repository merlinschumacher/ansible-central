---
- name: Create Jellyfin base directory
  ansible.builtin.file:
    name: "{{ media_jellyfin_base_folder }}"
    state: directory
    owner: "{{ media_uid }}"
    group: "{{ media_gid }}"
    mode: "{{ media_file_permissions.directories }}"

- name: Create Jellyfin subdirectories
  ansible.builtin.file:
    name: "{{ item }}"
    state: directory
    owner: "{{ media_uid }}"
    group: "{{ media_gid }}"
    mode: "{{ media_file_permissions.data }}"
  loop:
    - "{{ media_jellyfin_base_folder }}/config"
    - "{{ media_jellyfin_base_folder }}/cache"

- name: Create Jellyfin configuration from template
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default(media_file_permissions.configs) }}"
    owner: "{{ media_uid }}"
    group: "{{ media_gid }}"
    backup: "{{ media_backup_configs }}"
  loop:
    - src: "jellyfin-config.json.j2"
      dest: "{{ media_jellyfin_base_folder }}/config/system.xml"
    - src: "jellyfin.env.j2"
      dest: "{{ media_jellyfin_base_folder }}/jellyfin.env"
    - src: "jellyfin.yaml.j2"
      dest: "{{ media_jellyfin_base_folder }}/jellyfin.yaml"
  notify: restart_media_services

- name: Create Jellyfin compose file from template
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ media_base_folder }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
    mode: "0640"
  with_items:
    - "jellyfin.yaml.j2"
    - "jellyfin.env.j2"
  notify:
    - media-recreate

- name: Create Jellyfin config.json from template
  ansible.builtin.template:
    src: "jellyfin-config.json.j2"
    dest: "{{ media_jellyfin_base_folder }}/config.json"
    owner: 1000
    group: 1000
    mode: "0600"
  notify:
    - media-recreate
